{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gleri/Documents/GitHub/COP4331-Large-Project/frontend/src/components/DialogBox.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Radio from '@mui/material/Radio';\nimport Button from \"@mui/material/Button\";\nimport { Box, Grid } from \"@mui/material\";\nimport Slider from '@mui/material/Slider';\nimport TextField from '@mui/material/TextField';\nimport { FormControlLabel } from \"@mui/material\";\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogBox = props => {\n  _s();\n\n  const [showName, setShowName] = useState(true);\n  const [showEmail, setShowEmail] = useState(false);\n  const [showNumber, setShowNumber] = useState(false);\n  const [showWork, setShowWork] = useState(false);\n  const [showGoals, setShowGoals] = useState(false);\n  const [showChallenges, setShowChallenges] = useState(false);\n  const [showSerious, setShowSerious] = useState(false);\n  const [showInvest, setShowInvest] = useState(false);\n  const [showHistory, setShowHistory] = useState(false);\n  const [showDone, setShowDone] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [workAnswer, setWorkAnswer] = useState(\"\");\n  const [goalAnswer, setGoalAnswer] = useState(\"\");\n  const [challengeAnswer, setChallengeAnswer] = useState(\"\");\n  const [seriousness, setSeriousness] = useState(7);\n  const [hadPrevTrainer, setHadPrevTrainer] = useState(-1);\n  const [commitAnswer, setCommitAnswer] = useState(-1);\n  const investAns1 = \"I have the finances/energy to invest in my personal growth, knowledge, and health.\";\n  const investAns2 = \"I am willing to invest if I believe the program and accountability can deliver results.\";\n  const investAns3 = \"I am not in a position where I can invest in my personal growth, health, and physique at this time.\";\n\n  const sendInfoRequest = async e => {\n    e.preventDefault();\n    var obj = {\n      firstName: firstName,\n      middleName: middleName,\n      lastName: lastName,\n      email: email,\n      phone: phone,\n      workAnswer: workAnswer,\n      goalAnswer: goalAnswer,\n      challengeAnswer: challengeAnswer,\n      seriousness: seriousness,\n      prevTrainer: hadPrevTrainer,\n      commitAnswer: commitAnswer\n    };\n    var js = JSON.stringify(obj);\n    console.log(js);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/request-info\", {\n        method: \"POST\",\n        body: js,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMessage(\"Your info request is being sent to our trainers!\");\n      var txt = await response.text();\n      var res = JSON.parse(txt);\n\n      if (res.error.length > 0) {\n        console.log(res.error);\n        setMessage(\"It looks like we were unable to process your info request at this time. Please try again.\");\n      }\n    } catch (error) {\n      setMessage(\"It looks like we were unable to process your info request at this time. Please try again.\");\n      console.log(error);\n    }\n\n    setShowDone(false);\n    props.setShowInfo(false);\n    setShowName(true);\n  }; // From https://tomduffytech.com/how-to-format-phone-number-in-react/\n\n\n  const handlePhoneChange = e => {\n    // this is where we'll call our future formatPhoneNumber function that we haven't written yet.\n    const formattedPhoneNumber = formatPhoneNumber(e.target.value); // we'll set the input value using our setInputValue\n\n    setPhone(formattedPhoneNumber);\n  };\n\n  function formatPhoneNumber(value) {\n    // if input value is falsy eg if the user deletes the input, then just return\n    if (!value) return value; // clean the input for any non-digit values.\n\n    const phoneNumber = value.replace(/[^\\d]/g, \"\"); // phoneNumberLength is used to know when to apply our formatting for the phone number\n\n    const phoneNumberLength = phoneNumber.length; // we need to return the value with no formatting if its less then four digits\n    // this is to avoid weird behavior that occurs if you  format the area code to early\n\n    if (phoneNumberLength < 4) return phoneNumber; // if phoneNumberLength is greater than 4 and less the 7 we start to return\n    // the formatted number\n\n    if (phoneNumberLength < 7) {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n    } // finally, if the phoneNumberLength is greater then seven, we add the last\n    // bit of formatting and return it.\n\n\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n  }\n\n  const switchToEmail = () => {\n    setShowEmail(true);\n    setShowName(false);\n  };\n\n  const switchToNumber = () => {\n    setShowNumber(true);\n    setShowEmail(false);\n  };\n\n  const switchToWork = () => {\n    setShowWork(true);\n    setShowNumber(false);\n  };\n\n  const switchToGoals = () => {\n    setShowGoals(true);\n    setShowWork(false);\n  };\n\n  const switchToChallenges = () => {\n    setShowChallenges(true);\n    setShowGoals(false);\n  };\n\n  const switchToSerious = () => {\n    setShowSerious(true);\n    setShowChallenges(false);\n  };\n\n  const switchToHistory = () => {\n    setShowHistory(true);\n    setShowSerious(false);\n  };\n\n  const switchToInvest = () => {\n    setShowInvest(true);\n    setShowHistory(false);\n  };\n\n  const switchToDone = () => {\n    setShowDone(true);\n    setShowInvest(false);\n  };\n\n  const Name = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showName,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onBackdropClick: () => {\n      props.setShowInfo(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        textAlign: \"center\",\n        children: \"Information Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n        textAlign: \"center\",\n        marginBottom: \"20px\",\n        children: \"What is your name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: '250px',\n            margin: '5px'\n          },\n          id: \"firstName\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: firstName,\n          onChange: e => {\n            setFirstName(e.target.value);\n          },\n          size: \"large\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: '250px',\n            margin: '5px'\n          },\n          id: \"middleName\",\n          type: \"text\",\n          placeholder: \"Middle Name (optional)\",\n          value: middleName,\n          onChange: e => {\n            setMiddleName(e.target.value);\n          },\n          size: \"large\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: '250px',\n            margin: '5px'\n          },\n          id: \"lastName\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          value: lastName,\n          onChange: e => {\n            setLastName(e.target.value);\n          },\n          size: \"large\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            margin: '15px',\n            background: '#28B7CB'\n          },\n          variant: \"contained\",\n          onClick: switchToEmail,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 7\n  }, this);\n\n  const Email = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showEmail,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onBackdropClick: () => {\n      setShowEmail(false);\n      props.setShowInfo(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      textAlign: \"center\",\n      marginBottom: \"10px\",\n      children: \"Information Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        textAlign: \"center\",\n        children: \"What is your preferred Email address?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: \"25px\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: '250px',\n            margin: '5px'\n          },\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          size: \"large\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            margin: '15px',\n            background: '#28B7CB'\n          },\n          variant: \"contained\",\n          onClick: switchToNumber,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 7\n  }, this); // Write function to verify phone number, look for box to display as phone number\n\n\n  const Number = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showNumber,\n    onBackdropClick: () => {\n      setShowNumber(false);\n      ;\n      props.setShowInfo(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"What's a good phone number to reach you at?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"25px\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              width: '200px',\n              margin: '5px'\n            },\n            id: \"phone\",\n            type: \"tel\",\n            placeholder: \"Phone Number\",\n            value: phone,\n            onChange: handlePhoneChange,\n            size: \"large\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              marginTop: '15px',\n              marginBottom: '-20px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: switchToWork,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Next\",\n          onClick: switchToWork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 7\n  }, this); // Change to large box so all text can be seen\n\n\n  const Work = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showWork,\n    onBackdropClick: () => {\n      setShowWork(false);\n      ;\n      props.setShowInfo(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Next, knowing what you do for a living gives me context as to who you are and what lifestyle factors are at play. Where/ what do you do for work?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"25px\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              width: '500px',\n              margin: '5px'\n            },\n            multiline: true,\n            rows: 5,\n            id: \"work\",\n            type: \"textarea\",\n            placeholder: \"Enter your response here...\",\n            value: workAnswer,\n            onChange: e => {\n              setWorkAnswer(e.target.value);\n            },\n            size: \"large\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: '15px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: switchToGoals,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 7\n  }, this); // Change to large box so all text can be seen\n\n\n  const Goals = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showGoals,\n    onBackdropClick: () => {\n      setShowGoals(false);\n      props.setShowInfo(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Tell me a little about your goals and what you hope to achieve with CourtneyGenix.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"25px\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              width: '500px',\n              margin: '5px'\n            },\n            multiline: true,\n            rows: 5,\n            id: \"goal\",\n            type: \"textarea\",\n            placeholder: \"Enter your response here...\",\n            value: goalAnswer,\n            onChange: e => {\n              setGoalAnswer(e.target.value);\n            },\n            size: \"large\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: '15px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: switchToChallenges,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 7\n  }, this); // Change to large box so all text can be seen\n\n\n  const Challenges = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showChallenges,\n    onBackdropClick: () => {\n      setShowChallenges(false);\n      props.setShowInfo(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        text: true,\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          margin: 2,\n          children: \"What are some of your biggest challenges you face in reaching these goals?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"25px\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              width: '500px',\n              margin: '5px'\n            },\n            multiline: true,\n            rows: 5,\n            id: \"challenges\",\n            type: \"textarea\",\n            placeholder: \"Enter your response here...\",\n            value: challengeAnswer,\n            onChange: e => {\n              setChallengeAnswer(e.target.value);\n            },\n            size: \"large\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: '15px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: switchToSerious,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 7\n  }, this); // Get better slider from MUI\n\n\n  const Serious = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showSerious,\n      onBackdropClick: () => {\n        setShowSerious(false);\n        props.setShowInfo(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"On a scale of 1-10, how serious are you when it comes to reaching this goal and overcoming these struggles?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"25px\",\n            children: [/*#__PURE__*/_jsxDEV(Slider, {\n              sx: {\n                color: '#28B7CB'\n              },\n              size: \"medium\",\n              min: 1,\n              defaultValue: 7,\n              max: 10,\n              \"aria-label\": \"seriousness\",\n              valueLabelDisplay: \"auto\",\n              onChange: e => setSeriousness(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                margin: '15px',\n                background: '#28B7CB'\n              },\n              variant: \"contained\",\n              onClick: switchToHistory,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  };\n\n  const History = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showHistory,\n    onBackdropClick: () => {\n      setShowHistory(false);\n      props.setShowInfo(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      textAlign: \"center\",\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          marginBottom: \"10px\",\n          children: \"Have you ever worked with an online coach or personal trainer in the past?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          defaultValue: \"Yes\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: 1,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              sx: {\n                '&.Mui-checked': {\n                  color: '#28B7CB'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 54\n            }, this),\n            label: \"Yes\",\n            onChange: e => {\n              setHadPrevTrainer(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: 0,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              sx: {\n                '&.Mui-checked': {\n                  color: '#28B7CB'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 54\n            }, this),\n            label: \"No\",\n            onChange: e => {\n              setHadPrevTrainer(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            margin: '15px',\n            background: '#28B7CB'\n          },\n          variant: \"contained\",\n          onClick: switchToInvest,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 7\n  }, this);\n\n  const Invest = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: showInvest,\n    maxWidth: \"md\",\n    onBackdropClick: () => {\n      setShowInvest(false);\n      props.setShowInfo(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      textAlign: \"center\",\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        margin: 3,\n        children: [\"The purpose of the discovery call is to determine IF this program is a good fit for you. IF we do determine that is the case, are you in a position to invest your time, energy, and financial commitment?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: 1,\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                sx: {\n                  '&.Mui-checked': {\n                    color: '#28B7CB'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 52\n              }, this),\n              label: investAns1,\n              onChange: e => {\n                setCommitAnswer(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: 2,\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                sx: {\n                  '&.Mui-checked': {\n                    color: '#28B7CB'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 52\n              }, this),\n              label: investAns2,\n              onChange: e => {\n                setCommitAnswer(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: 3,\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                sx: {\n                  '&.Mui-checked': {\n                    color: '#28B7CB'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 52\n              }, this),\n              label: investAns3,\n              onChange: e => {\n                setCommitAnswer(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: '15px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: switchToDone,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 7\n  }, this);\n\n  const Done = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showDone,\n      maxWidth: \"md\",\n      onBackdropClick: () => {\n        setShowDone(false);\n        props.setShowInfo(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        textAlign: \"center\",\n        children: \"All Set!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            sx: {\n              margin: '10px'\n            },\n            children: \"Congrats on taking the first step on your fitness journey! We will be in touch very shortly!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 11\n          }, this), message, /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              margin: '20px',\n              background: '#28B7CB'\n            },\n            variant: \"contained\",\n            onClick: sendInfoRequest,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Name(), Email(), Number(), Work(), Goals(), Challenges(), Serious(), History(), Invest(), Done()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DialogBox, \"UG2XqXEgiR0UWG3lBNocgZTSqCw=\");\n\n_c = DialogBox;\nDialogBox.propTypes = {};\nexport default DialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogBox\");","map":{"version":3,"sources":["/mnt/c/Users/gleri/Documents/GitHub/COP4331-Large-Project/frontend/src/components/DialogBox.js"],"names":["React","useState","Dialog","Radio","Button","Box","Grid","Slider","TextField","FormControlLabel","RadioGroup","DialogContent","DialogContentText","DialogTitle","DialogBox","props","showName","setShowName","showEmail","setShowEmail","showNumber","setShowNumber","showWork","setShowWork","showGoals","setShowGoals","showChallenges","setShowChallenges","showSerious","setShowSerious","showInvest","setShowInvest","showHistory","setShowHistory","showDone","setShowDone","message","setMessage","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","email","setEmail","phone","setPhone","workAnswer","setWorkAnswer","goalAnswer","setGoalAnswer","challengeAnswer","setChallengeAnswer","seriousness","setSeriousness","hadPrevTrainer","setHadPrevTrainer","commitAnswer","setCommitAnswer","investAns1","investAns2","investAns3","sendInfoRequest","e","preventDefault","obj","prevTrainer","js","JSON","stringify","console","log","response","fetch","method","body","headers","txt","text","res","parse","error","length","setShowInfo","handlePhoneChange","formattedPhoneNumber","formatPhoneNumber","target","value","phoneNumber","replace","phoneNumberLength","slice","switchToEmail","switchToNumber","switchToWork","switchToGoals","switchToChallenges","switchToSerious","switchToHistory","switchToInvest","switchToDone","Name","width","margin","background","Email","Number","textAlign","marginTop","marginBottom","Work","Goals","Challenges","Serious","color","History","Invest","Done","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Radio from '@mui/material/Radio';\r\nimport Button from \"@mui/material/Button\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport Slider from '@mui/material/Slider';\r\nimport TextField from '@mui/material/TextField';\r\nimport { FormControlLabel } from \"@mui/material\";\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport { DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\r\n\r\n\r\nconst DialogBox = (props) => {\r\n  \r\n  const [showName, setShowName] = useState(true);\r\n  const [showEmail, setShowEmail] = useState(false);\r\n  const [showNumber, setShowNumber] = useState(false);\r\n  const [showWork, setShowWork] = useState(false);\r\n  const [showGoals, setShowGoals] = useState(false);\r\n  const [showChallenges, setShowChallenges] = useState(false);\r\n  const [showSerious, setShowSerious] = useState(false);\r\n  const [showInvest, setShowInvest] = useState(false);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [showDone, setShowDone] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n  \r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [middleName, setMiddleName]= useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [workAnswer, setWorkAnswer] = useState(\"\");\r\n  const [goalAnswer, setGoalAnswer] = useState(\"\");\r\n  const [challengeAnswer, setChallengeAnswer] = useState(\"\");\r\n  const [seriousness, setSeriousness] = useState(7);\r\n  const [hadPrevTrainer, setHadPrevTrainer] = useState(-1);\r\n  const [commitAnswer, setCommitAnswer] = useState(-1);\r\n\r\n  const investAns1 = \"I have the finances/energy to invest in my personal growth, knowledge, and health.\";\r\n  const investAns2 = \"I am willing to invest if I believe the program and accountability can deliver results.\";\r\n  const investAns3 = \"I am not in a position where I can invest in my personal growth, health, and physique at this time.\";\r\n  \r\n  const sendInfoRequest = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    var obj = {\r\n      firstName: firstName,\r\n      middleName: middleName,\r\n      lastName: lastName,\r\n      email: email,\r\n      phone: phone,\r\n      workAnswer: workAnswer,\r\n      goalAnswer: goalAnswer,\r\n      challengeAnswer: challengeAnswer,\r\n      seriousness: seriousness,\r\n      prevTrainer: hadPrevTrainer,\r\n      commitAnswer: commitAnswer,\r\n    };\r\n    var js = JSON.stringify(obj);\r\n    console.log(js);\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/request-info\",\r\n        {\r\n          method: \"POST\",\r\n          body: js,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n        );\r\n        setMessage(\"Your info request is being sent to our trainers!\")\r\n        \r\n        var txt = await response.text();\r\n        var res = JSON.parse(txt);\r\n        \r\n        if (res.error.length > 0) {\r\n          console.log(res.error);\r\n          setMessage(\"It looks like we were unable to process your info request at this time. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        setMessage(\"It looks like we were unable to process your info request at this time. Please try again.\");\r\n      console.log(error);\r\n    }\r\n    setShowDone(false);\r\n    props.setShowInfo(false);\r\n    setShowName(true);\r\n  };\r\n  \r\n  // From https://tomduffytech.com/how-to-format-phone-number-in-react/\r\n  const handlePhoneChange = (e) => {\r\n    // this is where we'll call our future formatPhoneNumber function that we haven't written yet.\r\n    const formattedPhoneNumber = formatPhoneNumber(e.target.value);\r\n    // we'll set the input value using our setInputValue\r\n    setPhone(formattedPhoneNumber);\r\n  }\r\n\r\n  function formatPhoneNumber(value) {\r\n    // if input value is falsy eg if the user deletes the input, then just return\r\n    if (!value) return value;\r\n  \r\n    // clean the input for any non-digit values.\r\n    const phoneNumber = value.replace(/[^\\d]/g, \"\");\r\n  \r\n    // phoneNumberLength is used to know when to apply our formatting for the phone number\r\n    const phoneNumberLength = phoneNumber.length;\r\n  \r\n    // we need to return the value with no formatting if its less then four digits\r\n    // this is to avoid weird behavior that occurs if you  format the area code to early\r\n  \r\n    if (phoneNumberLength < 4) return phoneNumber;\r\n  \r\n    // if phoneNumberLength is greater than 4 and less the 7 we start to return\r\n    // the formatted number\r\n    if (phoneNumberLength < 7) {\r\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n    }\r\n  \r\n    // finally, if the phoneNumberLength is greater then seven, we add the last\r\n    // bit of formatting and return it.\r\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\r\n      3,\r\n      6\r\n    )}-${phoneNumber.slice(6, 10)}`;\r\n  }\r\n  \r\n  const switchToEmail = () => {\r\n    setShowEmail(true);\r\n    setShowName(false);\r\n  };\r\n\r\n  const switchToNumber = () => {\r\n    setShowNumber(true);\r\n    setShowEmail(false);\r\n  };\r\n\r\n  const switchToWork = () => {\r\n    setShowWork(true);\r\n    setShowNumber(false);\r\n  };\r\n\r\n  const switchToGoals = () => {\r\n    setShowGoals(true);\r\n    setShowWork(false);\r\n  };\r\n\r\n  const switchToChallenges = () => {\r\n    setShowChallenges(true);\r\n    setShowGoals(false);\r\n  };\r\n\r\n  const switchToSerious = () => {\r\n    setShowSerious(true);\r\n    setShowChallenges(false);\r\n  };\r\n\r\n  const switchToHistory = () => {\r\n    setShowHistory(true);\r\n    setShowSerious(false);\r\n  };\r\n\r\n  const switchToInvest = () => {\r\n    setShowInvest(true);\r\n    setShowHistory(false);\r\n  };\r\n\r\n  const switchToDone = () => {\r\n    setShowDone(true);\r\n    setShowInvest(false);\r\n  };\r\n\r\n  const Name = () => (\r\n      <Dialog open={showName} fullWidth={true} maxWidth='xs' onBackdropClick={() => {props.setShowInfo(false)}}>\r\n          <DialogContent>\r\n          <DialogTitle textAlign='center'>Information Request</DialogTitle>\r\n          <DialogContentText textAlign='center' marginBottom='20px'>What is your name?</DialogContentText>\r\n              <Grid container direction='column' justifyContent='center' alignItems='center'>\r\n                <TextField sx={{width: '250px',\r\n                                margin: '5px',}} id='firstName' type='text' placeholder=\"First Name\" value={firstName} onChange={e => {setFirstName(e.target.value)}} size=\"large\" variant='standard'/>\r\n                <TextField sx={{width: '250px',\r\n                                margin: '5px',}} id='middleName' type='text' placeholder=\"Middle Name (optional)\" value={middleName} onChange={e => {setMiddleName(e.target.value)}} size=\"large\" variant='standard'/>\r\n                <TextField sx={{width: '250px',\r\n                                margin: '5px',}} id='lastName' type='text' placeholder=\"Last Name\" value={lastName} onChange={e => {setLastName(e.target.value)}} size=\"large\" variant='standard'/>\r\n                <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToEmail}>Next</Button>\r\n              </Grid>\r\n          </DialogContent>\r\n      </Dialog>\r\n    );\r\n\r\n  const Email = () => (\r\n      <Dialog open={showEmail} fullWidth={true} maxWidth='xs' onBackdropClick={() => {setShowEmail(false); props.setShowInfo(false)}}>\r\n          <DialogTitle textAlign='center' marginBottom='10px'>Information Request</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText textAlign='center'>\r\n              What is your preferred Email address?\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n              <TextField sx={{width: '250px', margin: '5px',}} id='email' type='email' placeholder=\"Email\" value={email} onChange={e => {setEmail(e.target.value)}} size=\"large\" variant='standard'/>\r\n              <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToNumber}>Next</Button>\r\n            </Grid>\r\n          </DialogContent>\r\n      </Dialog>\r\n  );\r\n\r\n\r\n  // Write function to verify phone number, look for box to display as phone number\r\n  const Number = () => (\r\n      <Dialog open={showNumber} onBackdropClick={() => {setShowNumber(false); ; props.setShowInfo(false)}}>\r\n        <Box sx={{\r\n            textAlign: 'center'\r\n          }}>\r\n          <DialogTitle>Information</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              What's a good phone number to reach you at?\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n              <TextField sx={{width: '200px', margin: '5px',}} id='phone' type='tel' placeholder='Phone Number' value={phone} onChange={handlePhoneChange} size=\"large\" variant='standard'/>\r\n              <Button sx={{marginTop: '15px', marginBottom: '-20px', background: '#28B7CB'}} variant='contained' onClick={switchToWork}>Next</Button>\r\n            </Grid>\r\n            <Button text=\"Next\" onClick={switchToWork} />\r\n          </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    );\r\n\r\n  // Change to large box so all text can be seen\r\n  const Work = () => (\r\n      <Dialog open={showWork} onBackdropClick={() => {setShowWork(false); ; props.setShowInfo(false)}}>\r\n        <Box sx={{\r\n            textAlign: 'center'\r\n          }}>\r\n          <DialogTitle>Information</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Next, knowing what you do for a living gives me context as to who\r\n              you are and what lifestyle factors are at play. Where/ what do you\r\n              do for work?\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n            <TextField sx={{width: '500px', margin: '5px',}} multiline rows={5} id='work' type='textarea' placeholder=\"Enter your response here...\" value={workAnswer} onChange={e => {setWorkAnswer(e.target.value)}} size=\"large\" variant='standard'/>\r\n            <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToGoals}>Next</Button>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    );\r\n\r\n  // Change to large box so all text can be seen\r\n  const Goals = () => (\r\n      <Dialog open={showGoals} onBackdropClick={() => {setShowGoals(false); props.setShowInfo(false)}}>\r\n        <Box sx={{\r\n            textAlign: 'center'\r\n          }}>\r\n          <DialogTitle>Information</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Tell me a little about your goals and what you hope to achieve with\r\n              CourtneyGenix.\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n            <TextField sx={{width: '500px', margin: '5px',}} multiline rows={5} id='goal' type='textarea' placeholder=\"Enter your response here...\" value={goalAnswer} onChange={e => {setGoalAnswer(e.target.value)}} size=\"large\" variant='standard'/>\r\n            <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToChallenges}>Next</Button>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    );\r\n\r\n  // Change to large box so all text can be seen\r\n  const Challenges = () => (\r\n      <Dialog open={showChallenges} onBackdropClick={() => {setShowChallenges(false); props.setShowInfo(false)}}>\r\n        <Box sx={{\r\n            textAlign: 'center'\r\n          }}>\r\n          <DialogTitle text>Information</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText margin={2}>\r\n              What are some of your biggest challenges you face in reaching these\r\n              goals?\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n            <TextField sx={{width: '500px', margin: '5px',}} multiline rows={5} id='challenges' type='textarea' placeholder=\"Enter your response here...\" value={challengeAnswer} onChange={e => {setChallengeAnswer(e.target.value)}} size=\"large\" variant='standard'/>\r\n            <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToSerious}>Next</Button>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    );\r\n\r\n  // Get better slider from MUI\r\n  const Serious = () => {\r\n    \r\n    return (\r\n      <Dialog open={showSerious} onBackdropClick={() => {setShowSerious(false); props.setShowInfo(false)}}>\r\n        <Box sx={{\r\n            textAlign: 'center'\r\n          }}>\r\n          <DialogTitle>Information</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              On a scale of 1-10, how serious are you when it comes to reaching\r\n              this goal and overcoming these struggles?\r\n            </DialogContentText>\r\n            <Grid container direction='column' justifyContent='center' alignItems='center' marginTop='25px'>\r\n                <Slider\r\n                  sx={{color: '#28B7CB'}}\r\n                  size=\"medium\"\r\n                  min={1}\r\n                  defaultValue={7}\r\n                  max={10}\r\n                  aria-label=\"seriousness\"\r\n                  valueLabelDisplay=\"auto\"\r\n                  onChange={e => setSeriousness(e.target.value)}\r\n                />\r\n                <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToHistory}>Next</Button>\r\n              </Grid>\r\n          </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const History = () => (\r\n      <Dialog open={showHistory} onBackdropClick={() => {setShowHistory(false); props.setShowInfo(false)}}>\r\n          <DialogTitle textAlign=\"center\">Information</DialogTitle>\r\n          <DialogContent>\r\n            <Grid container direction='column' alignItems='center' justifyContent='center'>\r\n              <DialogContentText marginBottom=\"10px\">\r\n                Have you ever worked with an online coach or personal trainer in the\r\n                past?\r\n              </DialogContentText>\r\n            </Grid>\r\n            <Grid container direction='column' alignItems='center' justifyContent='center'>\r\n              <RadioGroup row defaultValue=\"Yes\">\r\n                <FormControlLabel value={1} control={<Radio sx={{'&.Mui-checked':{color:'#28B7CB'}}}/>} label=\"Yes\" onChange={e => {setHadPrevTrainer(e.target.value)}}/>\r\n                <FormControlLabel value={0} control={<Radio sx={{'&.Mui-checked':{color:'#28B7CB'}}}/>} label=\"No\" onChange={e => {setHadPrevTrainer(e.target.value)}}/>\r\n              </RadioGroup>\r\n              <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToInvest}>Next</Button>\r\n            </Grid> \r\n          </DialogContent>\r\n      </Dialog>\r\n    );\r\n\r\n  const Invest = () => (\r\n      <Dialog open={showInvest} maxWidth='md' onBackdropClick={() => {setShowInvest(false); props.setShowInfo(false)}}>\r\n        <DialogTitle textAlign='center'>Information</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText margin={3}>\r\n            The purpose of the discovery call is to determine IF this program is\r\n            a good fit for you. IF we do determine that is the case, are you in\r\n            a position to invest your time, energy, and financial commitment?\r\n          <br/><br/>\r\n          <Grid container direction='column' alignItems='center' justifyContent='center'>\r\n            <RadioGroup>\r\n              <FormControlLabel value={1} control={<Radio sx={{'&.Mui-checked':{color:'#28B7CB'}}}/>} label={investAns1} onChange={e => {setCommitAnswer(e.target.value)}}/>\r\n              <FormControlLabel value={2} control={<Radio sx={{'&.Mui-checked':{color:'#28B7CB'}}}/>} label={investAns2} onChange={e => {setCommitAnswer(e.target.value)}}/>\r\n              <FormControlLabel value={3} control={<Radio sx={{'&.Mui-checked':{color:'#28B7CB'}}}/>} label={investAns3} onChange={e => {setCommitAnswer(e.target.value)}}/>\r\n            </RadioGroup>\r\n            <Button sx={{margin: '15px', background: '#28B7CB'}} variant='contained' onClick={switchToDone}>Next</Button>\r\n          </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n\r\n  const Done = () => {\r\n\r\n    return (\r\n      <Dialog open={showDone} maxWidth='md' onBackdropClick={() => {setShowDone(false); props.setShowInfo(false)}}>\r\n        <DialogTitle textAlign='center' >All Set!</DialogTitle>\r\n        <DialogContent>\r\n        <Grid container direction='column' alignItems='center' justifyContent='center'>\r\n          <DialogContentText sx={{margin: '10px'}}>\r\n            Congrats on taking the first step on your fitness journey! We will be\r\n            in touch very shortly!\r\n          </DialogContentText>\r\n          {message}\r\n          <Button sx={{margin: '20px', background: '#28B7CB'}} variant='contained' onClick={sendInfoRequest}>Done</Button>\r\n        </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Name()}\r\n      {Email()}\r\n      {Number()}\r\n      {Work()}\r\n      {Goals()}\r\n      {Challenges()}\r\n      {Serious()}\r\n      {History()}\r\n      {Invest()}\r\n      {Done()}\r\n    </div>\r\n  );\r\n};\r\n\r\nDialogBox.propTypes = {};\r\n\r\nexport default DialogBox;\r\n"]},"metadata":{},"sourceType":"module"}